# This justfile requires https://github.com/casey/just

# Load environment variables from `.env` file.
set dotenv-load
# Fail the script if the env file is not found.
set dotenv-required

project_dir := justfile_directory()

# print available targets
[group("project-agnostic")]
default:
    @just --list --justfile {{justfile()}}

# evaluate and print all just variables
[group("project-agnostic")]
evaluate:
    @just --evaluate

# print system information such as OS and architecture
[group("project-agnostic")]
system-info:
    @echo "architecture: {{arch()}}"
    @echo "os: {{os()}}"
    @echo "os family: {{os_family()}}"

# clean (remove) the build artifacts
[group("development")]
clean:
    @{{justfile_directory()}}/../../gradlew -p {{justfile_directory()}} clean

# clean docker containers and volumes
[group("development")]
docker-clean:
    @docker compose down --volumes --remove-orphans

# run "nostr-agentic" example application
[group("development")]
run profiles='development':
    @SPRING_PROFILES_ACTIVE={{profiles}} \
    {{justfile_directory()}}/../../gradlew -P {{justfile_directory()}} bootRun

# run "nostr-agentic" with model smollm2
[group("development")]
run-smollm2 profiles='development,smollm2':
    @just run {{profiles}}

# run "nostr-agentic" with model gemma3
[group("development")]
run-gemma3 profiles='development,gemma3':
    @just run {{profiles}}

# run "nostr-agentic" with model moondream
[group("development")]
run-moondream profiles='development,moondream':
    @just run {{profiles}}

# List available nostr identities.
[group("api")]
listidentities:
    @curl --silent --request 'GET' \
         http://localhost:"${SERVER_PORT}"/api/v1/nostr/listidentities | jq

# List models that are available locally on the machine where Ollama is running.
[group("api")]
listmodels:
    @curl --silent --request 'GET' \
         http://localhost:"${SERVER_PORT}"/api/v1/model/listmodels | jq

# Generate a nostr event.
[group("api")]
event text='What day is today?':
    @curl --silent --request 'POST' \
         http://localhost:"${SERVER_PORT}"/api/v1/nostr/event-plain \
         --header 'Content-Type: application/json' \
         --data '{ "contents": "{{text}}" }' | jq
